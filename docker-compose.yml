version: '3.5'

services:

  nginx:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: nginx
    ports:
      - 80:80
    volumes:
      - app:/var/www
    working_dir: /var/www
    environment:
      SETUP: '
add-virtual-host $APP_NAME $APP_DOMAIN
'
      OUTPUT: '
printf "%-30s %s\n" "URLs" "http://$APP_DOMAIN/";
printf "%-30s %s" "" "https://$APP_DOMAIN/";
'
    networks:
      - app_network
    depends_on:
      - php
    container_name: ${APP_NAME}_nginx
  
  mysql:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      SETUP: '
create-db $APP_DB_NAME
'
      OUTPUT: '
printf "%-30s %s\n" "Database Host" "mysql";
printf "%-30s %s\n" "Database User" "root";
printf "%-30s %s\n" "Database Password" "$MYSQL_ROOT_PASSWORD";
printf "%-30s %s" "Database Port" "3306";
'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - app_network
    container_name: ${APP_NAME}_mysql

  php:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: php
    volumes:
      - app:/var/www
    working_dir: /var/www
    environment:
      APP_DOMAIN: $APP_DOMAIN
      APP_DB_HOST: mysql
      APP_DB_NAME: $APP_DB_NAME
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      OUTPUT: '
printf "%-30s %s" "PHP Version" "$$(php -v | grep -Po "(?<=PHP )([0-9.]+)")"
'
    networks:
      - app_network
    depends_on:
      - mysql
    container_name: ${APP_NAME}_php

  mail:
    image: mailhog/mailhog
    restart: always
    ports:
      - 1025:1025
      - 8025:8025
    environment:
      - 'OUTPUT=
printf "%-30s %s" "Mail URL" "http://$APP_DOMAIN:8025"
'
    networks:
      - app_network
    container_name: ${APP_NAME}_mail

networks:
  app_network:

volumes:
  app:
    name: ${APP_NAME}_app
